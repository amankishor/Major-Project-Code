import React from 'react'
import { useState } from 'react';
import signupImg from "../assets/images/signup.gif";
import avatar from "../assets/images/doctor-img01.png"
import {Link ,useNavigate} from 'react-router-dom';
import uploadImageToCloudinary from '../utils/uploadCloudinary';
import {BASE_URL} from "../config.js"
import {toast} from "react-toastify";
import HashLoader from "react-spinners/HashLoader" ;


const Signup = () => {
  const [selectedFile,setSelectedFile] = useState(null)
  const [previewURL ,setPreviewURL] =useState('');
  const [loading ,setLoading] = useState(false)

  const [formData ,setFormData] =useState({
    name:"",
    email:'',
    password:'',
    photo:selectedFile,
    gender:"",
    role:'patient'
  });

  const navigate = useNavigate()

  const handleInputChange = e => {
    setFormData({...formData,[e.target.name]: e.target.value});
  }
  const handleFileInputChange = async (event) =>{
    const file =event.target.files[0];
    
    const data = await uploadImageToCloudinary(file)
    //console.log(data)//we have used this to check whether the url is been generating for the image by using the cloudnairy now we  gona store the image in the  atlas
    
    setPreviewURL(data.url)
    setSelectedFile(data.url)
    setFormData({...formData , photo: data.url})
  };


  const submitHandler = async event=>{

   // console.log(formData);
    event.preventDefault()
    setLoading(true)

    try{
      const res = await fetch(`${BASE_URL}/auth/register`,
      {
        method:'post',
        headers:{
          'content-Type':'application/json'
        },
        body:JSON.stringify(formData),
      })

      const {message} = await res.json()

      if(!res.ok){
        throw new Error(message)
      }
      setLoading(false)
      toast.success(message)
      navigate('/login')

    }catch (err){
      toast.error(err.message)
      setLoading(false)

    }
  };
  
  return (
    <section className='px-5 xl:px-0'>
      <div className='max-w-[1170px] mx-auto'>
        <div className='grid grid-cols-1 lg:grid-cols-2'>

          <div className='hidden lg:block bg:primaryColor rounded-l-lg'>
            <figure className='rounded-l-lg'>
              <img src={signupImg} alt="" className='w-full rounded-l-lg' />
            </figure>
          </div>    

          <div className='rounded-l-lg lg:pl-16 py-10'>
            <h3 className='text-headingColor text-[22px] leading-9 font-bold mb-10'>
              create an <span className='text-primaryColor'>account</span>
            </h3>

            <form onSubmit={submitHandler}>
              <div className='mb-5 flex items-center gap-3'>
                {selectedFile &&(
                  <figure className='w-[60px] h-[60px] rounded-full border-2 border-solid border-primaryColor flex items-center justify-center'>
                  <img src={previewURL} alt="" className='w-full rounded-full' />
                  </figure>
                )}

                <!-- <div className='relative w-[130px] h-[50px]'>
                  <input 
                  type="file"
                  name='photo'
                  id='customFile'
                  onChange={handleFileInputChange}
                  accept='.jpg,.png' 
                  className='absolute top-0 left-0 w-full h-full opacity-0 cursor-pointer'/>
                  <label htmlFor="customFile" className='absolute top-0 left-0 w-full h-full flex items-center px-[0.75rem] py-[0.375] text-[15px] leading-6 overflow-hidden bg-[#0066ff46] text-headingColor font-semibold rounded-lg truncate cursor-pointer'>
                    Upload Photo
                    </label>
                </div> -->
              </div>
            </form>
          </div>
        </div>
      </div>
    </section>
  )
}

export default Signup
